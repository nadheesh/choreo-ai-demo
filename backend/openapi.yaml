openapi: 3.0.0
info:
  title: Chat Agent API
  description: This API allows users to upload PDFs to build a knowledge base and ask questions based on the uploaded documents.
  version: 1.0.0
  contact:
    name: Nadheesh Jihan
    email: nadheesh@wso2.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /add_data:
    post:
      summary: Upload a PDF and add its data to the vector store
      description: Adds data from a PDF file to the vector store, associating the data with a specific user.
      operationId: addData
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The PDF file to upload.
                user_id:
                  type: string
                  description: The user ID associated with the upload.
      responses:
        '200':
          description: PDF data added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: PDF data added successfully
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: An error occurred while processing the request
  /ask_question:
    post:
      summary: Ask a question based on uploaded PDFs
      description: Processes a conversation request and generates a response based on the user's question and uploaded PDF data.
      operationId: askQuestion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationRequest'
      responses:
        '200':
          description: AI-generated response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    example: The AI-generated response
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: An error occurred while processing the request
components:
  schemas:
    Message:
      type: object
      properties:
        role:
          type: string
          description: The role of the message sender (e.g., user or system).
        content:
          type: string
          description: The content of the message.
          nullable: true
      required:
        - role
    ConversationRequest:
      type: object
      properties:
        user_id:
          type: string
          description: The ID of the user asking the question.
        message:
          type: string
          description: The user's question.
        chat_history:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: The history of the conversation.
      required:
        - user_id
        - message
        - chat_history
